name: justedlev-msrv
services:
  # API Gateway
  api-gateway.justedlev:
    tty: true
    env_file:
      - .env
    container_name: bridgewayhub
    image: justedlev/bridgewayhub:latest
    build:
      context: .
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    healthcheck:
      test: [ "CMD", "curl", "-k", "-f", "http://localhost:${SERVER_PORT}/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      auth-server.justedlev:
        condition: service_started
      service-discovery.justedlev:
        condition: service_healthy
      config-server.justedlev:
        condition: service_healthy
    volumes:
      - ./logs:${LOGGING_FILE_PATH}
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 1GB

  # Service discovery
  service-discovery.justedlev:
    tty: true
    environment:
      - SERVER_PORT=${SRVREG_PORT}
      - SPRING_APPLICATION_NAME=${SRVREG_APP_NAME}
      - SPRING_SECURITY_USER_NAME=${SRVREG_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SRVREG_USER_PWD}
      - SPRING_SECURITY_USER_ROLES=system
      - EUREKA_INSTANCE_HOSTNAME=${SRVREG_APP_NAME}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${SRVREG_DEFAULTZONE}
      - LOGGING_FILE_PATH=${SRVREG_LOGGING_FILE_PATH}
    container_name: ${SRVREG_APP_NAME}
    image: justedlev/simple-eureka-server:latest
    ports:
      - "${SRVREG_PORT}:${SRVREG_PORT}"
    healthcheck:
      test: [ "CMD", "curl", "-k", "-f", "http://localhost:${SRVREG_PORT}/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      config-server.justedlev:
        condition: service_healthy
    volumes:
      - ./logs/${SRVREG_APP_NAME}:${SRVREG_LOGGING_FILE_PATH}
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 1GB

  # SSO service (keycloak)
  sso:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:25.0.6
    command: [ "start-dev" ]
    environment:
      KEYCLOAK_ADMIN: "{example}"
      KEYCLOAK_ADMIN_PASSWORD: "{example}"
      KC_HEALTH_ENABLED: true
      KC_HOSTNAME: localhost
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/{example}
      KC_DB_USERNAME: "{example}"
      KC_DB_PASSWORD: "{example}"
      KC_DB_SCHEMA: keycloak
    depends_on:
      - postgres
    ports:
      - "9321:8080"

  # Postgres DB
  postgres:
    container_name: postgres
    image: postgres:16.4-alpine
    environment:
      POSTGRES_DB: "{example}"
      POSTGRES_USER: "{example}"
      POSTGRES_PASSWORD: "{example}"
    volumes:
      - db-data:/var/lib/postgresql/data
      - /.db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d" ]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 12s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 250MB

volumes:
  db-data:
