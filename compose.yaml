name: justedlev-microservice
services:
  bridgewayhub:
    container_name: bridgewayhub
    image: justedlev/bridgewayhub:0.0.1-SNAPSHOT
    build:
      context: .
    environment:
      SERVICE_DISCOVERY_ZONE: http://{example}:{example}@service-discovery:8761/eureka
      ORIGINS: http://service-discovery:8761,http://localhost:8761,http://localhost:3000
      USERNAME: "{example}"
      PASSWORD: "{example}"
      ROLES: admin,user,editor,owner
      KC_HOST: http://sso:9321
      KC_REALM: "{example}"
      KC_ISSUER_URI: ${KC_HOST}/realms/${KC_REALM}
      KC_JWKS_URI: ${KC_ISSUER_URI}/protocol/openid-connect/certs
      KC_TOKEN_ENDPOINT: ${KC_ISSUER_URI}/protocol/openid-connect/token
      KC_INTROSPECTION_ENDPOINT: ${KC_ISSUER_URI}/protocol/openid-connect/token/introspect
      KC_CLIENT_ID: "{example}"
      KC_CLIENT_SECRET: "{example}"
    ports:
      - 8123:8123
    depends_on:
      - sso
      - service-discovery

  # Service discovery
  service-discovery:
    container_name: service-discovery
    image: justedlev/simple-eureka-server:1.0.0-SNAPSHOT
    environment:
      USERNAME: "{example}"
      PASSWORD: "{example}"
      SERVICE_DISCOVERY_ZONE: http://{example}:{example}@service-discovery:8761/eureka
    ports:
      - 8761:8761

  # SSO service (keycloak)
  sso:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    command: [ "start-dev", "--http-port=9321" ]
    environment:
      KEYCLOAK_ADMIN: "{example}"
      KEYCLOAK_ADMIN_PASSWORD: "{example}"
      KC_HEALTH_ENABLED: true
      KC_HOSTNAME: localhost
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/{example}
      KC_DB_USERNAME: "{example}"
      KC_DB_PASSWORD: "{example}"
      KC_DB_SCHEMA: keycloak
    depends_on:
      - postgres
    ports:
      - 9321:9321

  # Postgres DB
  postgres:
    container_name: postgres
    image: postgres:16.2-alpine
    environment:
      POSTGRES_DB: "{example}"
      POSTGRES_USER: "{example}"
      POSTGRES_PASSWORD: "{example}"
    volumes:
      - db-data:/var/lib/postgresql/data
      - /.db:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "justedlev", "-d" ]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 12s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 250MB

volumes:
  db-data:
